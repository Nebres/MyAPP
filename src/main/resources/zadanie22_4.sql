create table BOOKS_AUD (
	EVENT_ID int(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME not null,
    EVENT_TYPE Varchar(10) default null,
    BOOK_ID int(11) not null,
    OLD_TITLE varchar(255),
    NEW_TITLE varchar(255),
    OLD_PUBYER int(4),
    NEW_PUBYER int(4),
    OLD_BESTSELLER boolean,
    NEW_BESTSELLER boolean,
    PRIMARY KEY (EVENT_ID)
    );

delimiter $$

create trigger BOOKS_INSERT after insert on BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYER, NEW_BESTSELLER)
		VALUES (curtime(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

delimiter ;

delimiter $$

create trigger BOOKS_DELETE after delete on BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID)
		VALUES (curtime(), "DELETE", OLD.BOOK_ID);
END $$

delimiter ;

delimiter $$

create trigger BOOKS_UPDATE after update on BOOKS
FOR EACH ROW
BEGIN
	INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, OLD_TITLE, NEW_PUBYER,
	OLD_PUBYER, NEW_BESTSELLER, OLD_BESTSELLER)
		VALUES (curtime(), "UPDATE", OLD.BOOK_ID, NEW.TITLE, OLD.TITLE, NEW.PUBYEAR,
		OLD.PUBYEAR, NEW.BESTSELLER, OLD.BESTSELLER);
END $$

delimiter ;

create table READERS_AUD (
	EVENT_ID int(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME not null,
    EVENT_TYPE Varchar(10) default null,
    READER_ID int(11) not null,
    OLD_FIRSTNAME varchar(255),
    NEW_FIRSTNAME varchar(255),
    OLD_LASTNAME varchar(255),
    NEW_LASTNAME varchar(255),
    OLD_PESELID varchar(11),
    NEW_PESELID varchar(11),
    OLD_VIP_LEVEL varchar(20),
    NEW_VIP_LEVEL varchar(20),
    PRIMARY KEY (EVENT_ID)
    );

delimiter $$

create trigger READERS_INSERT after insert on READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
		VALUES (curtime(), "INSERT", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

delimiter ;

delimiter $$

create trigger READERS_DELETE after delete on READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID)
		VALUES (curtime(), "DELETE", OLD.READER_ID);
END $$

delimiter ;

delimiter $$

create trigger READERS_UPDATE after update on READERS
FOR EACH ROW
BEGIN
	INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_FIRSTNAME, NEW_FIRSTNAME, OLD_LASTNAME, NEW_LASTNAME,
	 OLD_PESELID, NEW_PESELID, OLD_VIP_LEVEL, NEW_VIP_LEVEL)
		VALUES (curtime(), "UPDATE", OLD.READER_ID, OLD.FIRSTNAME, NEW.FIRSTNAME, OLD.LASTNAME, NEW.LASTNAME,
		OLD.PESELID, NEW.PESELID, OLD.VIP_LEVEL, NEW.VIP_LEVEL);
END $$

delimiter ;
